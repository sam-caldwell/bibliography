id: tph-tuwien-ac-at-2000
type: article
apa7:
    authors:
        - family: Omer
          given: Bernhard
    year: 2000
    date: D:200901020
    title: Structured Quantum Programming
    container_title: tph.tuwien.ac.at
    publisher: Vienna University of Technology Institute for Theoretical Physics
    url: http://tph.tuwien.ac.at/~oemer/doc/structquprog.pdf
    accessed: "2025-10-06"
annotation:
    summary: |
        Bernhard Ömer’s dissertation “Structured Quantum Programming” develops a disciplined, software-engineering 
        approach to quantum algorithms. It argues that the same abstractions that tamed classical complexity—types, 
        hierarchical procedures, memory management, and structured control—can and should organize quantum programs. 
        The work centers on QCL, a C-like imperative language that integrates classical control with quantum kernels. 
        QCL provides explicit quantum data types (qubit registers) with access modes, two operator families—general
        unitary operators and reversible pseudo-classical functions—and facilities for automatic inverse execution and 
        Bennett-style scratch-space management to ensure clean uncomputation. It introduces local quantum variables 
        via a managed “quheap,” convenient register slicing/concatenation, and conditional operator application, 
        allowing programmers to assemble complex routines while preserving reversibility constraints. The thesis 
        emphasizes hybrid execution, where classical scaffolding orchestrates quantum subroutines, and demonstrates 
        patterns for ancilla reuse, measurement-aware control flow, and stepwise refinement from high-level intent to 
        gate-level realization. Paired tooling (an interpreter/simulator) supports inspection and debugging during 
        simulation, aiding pedagogy and verification even though real quantum states cannot be observed. Overall, Ömer
        shows that principled programming constructs make quantum development more practical and maintainable, framing
        quantum software as an extension of established structured programming rather than an ad hoc collection of
        circuits.
    keywords:
        - quantum mechanics
        - quantum computing
        - computer science
        - programming
